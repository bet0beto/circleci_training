version: 2

jobs:

  build:

    docker:
      - image: circleci/node:8.10

    steps:

      - checkout

      - run: echo 'build'

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-node-modules-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-node-modules-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-node-modules-{{ checksum "package.json" }}

      - run:
          name: linting
#          command: npm run lint -- --format junit -o reports/eslint.xml
          command: npm run lint -- --format="checkstyle" --output-file="reports/eslint-checkstyle.xml"

      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports

      - run: echo 'comment'

      - restore_cache:
          keys:
            - v1-dependencies-gems-{{ checksum "Gemfile" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-gems-

      - run:
          name: bundle install
          command: bundle install --jobs=4
          when: always

      - save_cache:
          paths:
            - vendor
          key: v1-dependencies-gems-{{ checksum "Gemfile" }}

      - run:
          name: comment on pull request
          command: DANGER_GITHUB_API_TOKEN={GITHUB_PULLREQUEST_COMMENT_KEY} bundle exec danger
          when: always

workflows:

  version: 2

  build:

    jobs:
      - build
